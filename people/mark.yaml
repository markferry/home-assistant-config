homeassistant:
  customize:
    group.mark_present:
      entity_picture: &ep /local/wb-icons/wb_mark.png
    binary_sensor.mark_present:
      entity_picture: *ep
    device_tracker.mark_phone:
      entity_picture: *ep
      friendly_name: "Mark Owntracks"

group:
  mark_present:
    name: "Mark"
    entities: &presence_entities
      - device_tracker.mark_phone
      - device_tracker.mark_moto_g5
      - device_tracker.mark_moto_g5_bt
      - device_tracker.moto_g_5

binary_sensor:
  - name: mark_present
    device_class: 'presence'
    platform: 'bayesian'
    prior: 0.66
    probability_threshold: 0.90
    observations:
      # OwnTracks
      - entity_id: device_tracker.mark_phone
        prob_given_true: 0.5
        prob_given_false: 0.2
        <<: &tracker_default
          platform: 'state'
          to_state: 'home'

      # mobile app
      - entity_id: device_tracker.moto_g_5
        prob_given_true: 0.8
        # Only leave the house without my phone to go running
        prob_given_false: 0.1
        <<: *tracker_default

      - entity_id: device_tracker.mark_moto_g5
        prob_given_true: 0.8
        # Only leave the house without my phone to go running
        prob_given_false: 0.1
        <<: *tracker_default

      - entity_id: device_tracker.mark_moto_g5_bt
        prob_given_true: 0.3
        prob_given_false: 0.05
        <<: *tracker_default

      - entity_id: device_tracker.canard
        prob_given_true: 0.5
        prob_given_false: 0.3
        <<: *tracker_default

      - entity_id: device_tracker.canard_wired
        prob_given_true: 0.2
        prob_given_false: 0.1
        <<: *tracker_default

      - entity_id: group.bedroom_mark_lights
        prob_given_true: 0.4
        prob_given_false: 0.1
        <<: *tracker_default


automation:
  - alias: "Calendar Mark Scene"
    trigger:
      - platform: state
        entity_id: calendar.mark_scene
        to: "on"
    action:
      - service_template: input_select.select_option
        data_template:
          entity_id: >
            {% set l = trigger.to_state.attributes.message.lower().split() %}
            {% if "mark" in l %}
            {%   set u = "bedroom_mark" %}
            {% endif %}
            input_select.{{u}}_mode
          option: >
            {% set v = trigger.to_state.attributes.message.lower().split()|last %}
            {{ v[0].upper() ~ v[1:].lower() }}
      - service: mqtt.publish
        data_template:
          topic: 'ha/calendar/mark-scene'
          payload: '{{trigger.to_state.attributes.message}}'

  - alias: "Calendar Mark Climate"
    trigger:
      - platform: state
        entity_id: calendar.mark_climate
        to: "on"
    action:
      - service_template: climate.set_temperature
        data_template:
          entity_id: >
            {% set l = trigger.to_state.attributes.message.lower().split() %}
            {% if "mark" in l %}
            {%   set u = "bedroom_mark" %}
            {% endif %}
            climate.{{u}}_thermostat
          temperature: >
            {% set l = trigger.to_state.attributes.message.lower().split() %}
            {{l|last|float}}
      - service: mqtt.publish
        data_template:
          topic: 'ha/calendar/mark-climate'
          payload: '{{trigger.to_state.attributes.message}}'

