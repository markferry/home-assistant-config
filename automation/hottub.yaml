# Power detection for the hot tub
# Debounce numeric_state with an input_boolean.
#
# Hot tub heater load is ~2000W
# Filter only load is ~30W
#
- alias: 'Hot Tub Hi'
  trigger:
    platform: numeric_state
    entity_id: sensor.greenwave_powernode_1_port_power_53_8
    above: 1500
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.hottub_debouncer

- alias: 'Hot Tub Lo'
  trigger:
    platform: numeric_state
    entity_id: sensor.greenwave_powernode_1_port_power_53_8
    below: 200
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.hottub_debouncer

- alias: 'Hot Tub Started'
  trigger:
    platform: state
    entity_id: input_boolean.hottub_debouncer
    to: 'on'
    for:
      minutes: 10
  condition:
    - condition: state
      entity_id: binary_sensor.hottub
      state: 'off'
  action:
    # turn on binary_sensor.hottub
    - service: mqtt.publish
      data_template:
        topic: 'ha/event/hottub'
        payload: 'on'
    - service: notify.automations
      data_template:
        message: 'Hot Tub heating started'


- alias: 'Hot Tub Stopped'
  trigger:
    platform: state
    entity_id: input_boolean.hottub_debouncer
    to: 'off'
    for:
      minutes: 5
  condition:
    - condition: state
      entity_id: binary_sensor.hottub
      state: 'on'
  action:
    # turn off binary_sensor.hottub
    - service: mqtt.publish
      data_template:
        topic: 'ha/event/hottub'
        payload: 'off'
    - service: notify.automations
      data_template:
        message: 'Hot Tub heating stopped'
    - service: persistent_notification.create
      data:
        title: 'Hot Tub'
        message: 'Heating stopped {{ as_timestamp(now()) | timestamp_custom("at %R on %a %d %b") }}'
        notification_id: 'hottub'
